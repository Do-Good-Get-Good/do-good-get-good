name: Build Android Release adhoc

on:
  workflow_dispatch:
    inputs:
      comments:
        description: "Comments"
        required: true
        default: "Manual build Actions"

jobs:
  build-android-adhoc:
    runs-on: ubuntu-latest
    steps:
      - name: Getting the repo
        uses: actions/checkout@v2
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: "9.0.4" # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - uses: actions/setup-node@v2
        with:
          node-version: "17"
      - name: Install React Native CLI
        run: |
          npm install react-native-cli -g
      - name: Install npm dependencies
        run: |
          npm ci
        working-directory: src/
      # - name: Building bundle
      #   run: |
      #     npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res/
      #   working-directory: src/
      - name: Build android
        env:
          KEYSTORE_ALIAS_PASSPHRASE: ${{ secrets.DGGG_KEYSTORE_PASSPHRASE }}
          KEYSTORE_ALIAS: ${{ secrets.DGGG_KEYSTORE_ALIAS }}
          KEYSTORE_PASSPHRASE: ${{ secrets.DGGG_KEYSTORE_PASSPHRASE }}
        run: |
          export VERSION_CODE=${{ github.run_number }}
          export VERSION_NAME=0.1.${{ github.run_number }}
          echo "${{ secrets.DGGG_RELEASE_KEYSTORE }}" > dggg_release.keystore.asc
          gpg -d --passphrase "${{ secrets.DGGG_KEYSTORE_PASSPHRASE }}" --batch dggg_release.keystore.asc > android/app/dggg_key.keystore
          cd android && ./gradlew assembleRelease -PversCode=$VERSION_CODE -PversName=$VERSION_NAME
          ./gradlew bundle -PversCode=$VERSION_CODE -PversName=$VERSION_NAME
        working-directory: src/
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: src/android/app/build/outputs/

  # upload-android:
  #   needs: build-android-adhoc
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #     - name: upload artifact to Firebase App Distribution
  #       uses: hasretsariyer/firebase-app-distribution-github-action@v1.0
  #       with:
  #         app_id: ${{secrets.FIREBASE_APP_ID_ANDROID}}
  #         firebase_token: ${{secrets.FIREBASE_CI_KEY}}
  #         tester_groups: dev-team
  #         app_file: app-release.apk
