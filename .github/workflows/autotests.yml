# This is a basic workflow to help you get started with Actions
name: Do Good Get Good unit tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - "*"
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Tests:
    name: Geting test status
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: "9.0.4" # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install
        working-directory: src/

      - name: Run tests
        run: npm test --ci
        working-directory: src/

      - uses: IgnusG/jest-report-action@v2.3.3
        if: always() # Or use "continue-on-error: true" in previous test step
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: "./src/"
          junit-file: "reports/JEST-tests.xml"

      # - name: Publish Test Report
      #   uses: mikepenz/action-junit-report@v2
      #   if: always() # always run even if the previous step fails
      #   with:
      #     report_paths: '**/JEST-tests.xml'

      # - uses: ArtiomTr/jest-coverage-report-action@v2
      #   if: always()
      #   with:
      #     working-directory: ./src/
      #     test-script: npm test
